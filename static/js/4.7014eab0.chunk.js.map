{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/MessageItem/MessageItem.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/DialogsForm.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToProps","state","isAuth","auth","DialogItem","props","path","id","className","s","dialog","src","img","to","name","maxLength50","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","MessageItem","mymessage","item","i","message","friends","Dialogs","dialogsElement","dialogsData","map","messagesElement","messagesData","dialogs","dialogsItem","messages","values","addMessage","newMessage","compose","connect","dialogsPage","dispatch","addMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,OAAS,6B,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,0BAA0B,WAAa,8B,oBCAlJD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,EAAI,uBAAuB,QAAU,+B,iICG1FC,EAAkB,SAACC,GACnB,MAAM,CACFC,OAAQD,EAAME,KAAKD,S,mCCYZE,EAfI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,sBAAKC,UAAWC,IAAEC,OAAlB,UACI,qBAAKC,IAAKN,EAAMO,MAChB,cAAC,IAAD,CAASC,GAAIP,EAAb,SACKD,EAAMS,W,mDCJnBC,EAAcC,YAAiB,IAqBpBC,EALUC,YAAU,CAC/BC,KAAM,cADeD,EAdL,SAACb,GACjB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOR,KAAM,aAAcS,UAAWC,IACtCC,SAAU,CAACC,IAAUX,OAEzB,8BACI,yD,kBCKDY,EAhBK,SAACtB,GAGjB,OAEIA,EAAMuB,UACJ,sBAAKpB,UAAS,UAAKC,IAAEoB,KAAP,YAAepB,IAAEqB,GAA/B,UAAqCzB,EAAM0B,QAA3C,OACD,sBAAKvB,UAAS,UAAKC,IAAEoB,KAAP,YAAepB,IAAEuB,SAA/B,UAA2C3B,EAAM0B,QAAjD,QCkDME,EArDC,SAAC5B,GAEb,IAAI6B,EAAiB7B,EAAM8B,YAAYC,KAAI,SAAA1B,GACvC,OAAO,cAAC,EAAD,CAA4BI,KAAMJ,EAAOI,KAAMP,GAAIG,EAAOH,GAAIK,IAAKF,EAAOE,KAAzDF,EAAOH,OAG/B8B,EAAkBhC,EAAMiC,aAAaF,KAAI,SAAAL,GACzC,OAAO,cAAC,EAAD,CAA8BA,QAASA,EAAQA,QAASxB,GAAIwB,EAAQxB,GAAIqB,UAAWG,EAAQH,WAAzEG,EAAQxB,OAkBrC,OACI,sBAAKC,UAAWC,IAAE8B,QAAlB,UACI,qBAAK/B,UAAWC,IAAE+B,YAAlB,SACKN,IAKL,sBAAK1B,UAAWC,IAAEgC,SAAlB,UACI,8BAAMJ,IACN,8BACI,cAAC,EAAD,CAAkBjB,SAfZ,SAACsB,GACnBrC,EAAMsC,WAAWD,EAAOE,wBC0BjBC,sBACXC,aAhBkB,SAAC7C,GACnB,MAAO,CACHkC,YAAalC,EAAM8C,YAAYZ,YAC/BG,aAAcrC,EAAM8C,YAAYT,iBAIf,SAACU,GACtB,MAAO,CACHL,WAAY,SAACZ,GACTiB,EAASC,YAAkBlB,ULzCP,SAACmB,GAAe,IACtCC,EADqC,4JAGvC,WACI,OAAKC,KAAK/C,MAAMH,OACT,cAACgD,EAAD,eAAeE,KAAK/C,QADI,cAAC,IAAD,CAAUQ,GAAG,eAJT,GACXwC,IAAMH,WAStC,OADqCJ,YAAQ9C,EAAR8C,CAAyBK,KKqCnDN,CAGbZ","file":"static/js/4.7014eab0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__107r0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__sgeR7\",\"dialogsItem\":\"Dialogs_dialogsItem__ryzrS\",\"messages\":\"Dialogs_messages__1p7mC\",\"newMessage\":\"Dialogs_newMessage__NsHuQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessageItem_message__Ljzle\",\"i\":\"MessageItem_i__1MG2O\",\"friends\":\"MessageItem_friends__2Ss_N\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Redirect } from \"react-router\";\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'></Redirect>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","import { NavLink } from 'react-router-dom';\r\nimport s from './DialogItem.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src={props.img}></img>\r\n            <NavLink to={path} >\r\n                {props.name}\r\n            </NavLink>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators'\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\n\r\nlet maxLength50 = maxLengthCreator(50);\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}> \r\n            <div>\r\n                <Field name={'newMessage'} component={Textarea} \r\n                validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add Message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({\r\n    form: 'newMessage'\r\n})(DialogsForm)\r\n\r\n\r\nexport default DialogsReduxForm;","import s from './MessageItem.module.css';\r\n\r\n\r\n\r\nconst MessageItem = (props) => {\r\n    \r\n    \r\n    return (\r\n        \r\n        props.mymessage\r\n        ? <div className={`${s.item} ${s.i}`}>{props.message} </div>\r\n        :<div className={`${s.item} ${s.friends}`}>{props.message} </div>\r\n        \r\n\r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport DialogsReduxForm from './DialogsForm';\r\nimport MessageItem from './MessageItem/MessageItem';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElement = props.dialogsData.map(dialog => {\r\n        return <DialogItem key={dialog.id} name={dialog.name} id={dialog.id} img={dialog.img} />\r\n    });\r\n\r\n    let messagesElement = props.messagesData.map(message => {\r\n        return <MessageItem key={message.id} message={message.message} id={message.id} mymessage={message.mymessage} />\r\n    });\r\n\r\n\r\n    /*     let onAddMessage = () => { //отправка сообщения до введения форм\r\n            props.addMessage();\r\n        }\r\n    \r\n        let onMessageChange = (e) => {\r\n            let text = e.target.value;\r\n            props.updateNewMessageText(text);\r\n    \r\n        } */\r\n\r\n    const addNewMessage = (values) => {debugger\r\n        props.addMessage(values.newMessage)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElement}\r\n            </div>\r\n\r\n\r\n\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n                <div>\r\n                    <DialogsReduxForm onSubmit={addNewMessage} />\r\n                </div>\r\n                {/*                 <div>\r\n                    <textarea\r\n                        className={s.newMessage}\r\n                        value={props.newMessageText}\r\n                        onChange={onMessageChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddMessage}>add message</button>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { addMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\n\r\n/* const DialogsContainer = (props) => {\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store) => {\r\n                    let state = store.getState();\r\n                    let addMessage = () => {\r\n                        store.dispatch(addMessageCreator());\r\n                    }\r\n                \r\n                    let messageChange = (text) => {\r\n                        store.dispatch(messageChangeCreator(text));\r\n                \r\n                    }\r\n                    return (\r\n                        <Dialogs \r\n                            addMessage={addMessage}\r\n                            updateNewMessageText={messageChange}\r\n                            dialogsData={state.dialogsPage.dialogsData}\r\n                            newMessageText={state.dialogsPage.newMessageText}\r\n                            messagesData={state.dialogsPage.messagesData}\r\n\r\n                        />\r\n                    )\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n\r\n    )\r\n\r\n} */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.dialogsPage.dialogsData,\r\n        messagesData: state.dialogsPage.messagesData, \r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (message) => {\r\n            dispatch(addMessageCreator(message))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}